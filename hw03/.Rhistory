salary_var <- sum((salary_m - salary_mean)^2)/(n-1)
points_sd <- points_var^(1/2)
salary_sd <- salary_var^(1/2)
cov_ps <- sum((points - points_mean)*(salary_m - salary_mean))/(n -1)
cor_ps <- cov_ps/(points_sd*salary_sd)
# Chunk 6
b1 <- cor_ps * salary_sd / points_sd
b0 <- salary_mean - b1 * points_mean
y_hat <- b0 + b1 * points
summary(y_hat)
# Chunk 7
plot(points,salary_m, pch = 19, col = "grey", xlab = "Points", ylab = "Salary(in millions", main = "Regression and Lowess lines")
# adding regression line
abline(a = b0, b = b1, col = "blue", lwd = 3)
text(x = 2500, y = 25, label = "Regression", col = "blue")
# adding lowess line
lines(lowess(points,salary_m, f = 0.7), col = "red", lwd = 3)
text(x = 1500, y = 20, label = "Lowess", col = "red")
# Chunk 8
residuals <- salary_m - y_hat
summary(residuals)
RSS <- sum(residuals^2)
TSS <- sum((salary_m - salary_mean)^2)
R_square <- 1 - RSS/TSS
# Chunk 9
plot(experience_int, salary_m, pch = 21, cex = 0.8, col = 'black',bg = "grey", xlab = 'Years of Experience', ylab = 'Salary (in millions)',main = "Scatterplot with lowess smooth")
lines(lowess(experience_int,salary_m, f = 0.7), col = "red", lwd = 3)
# Chunk 10
library(scatterplot3d)
scatterplot3d(points, experience_int, salary_m, ylab = "Experience", zlab = "Salary (in millions)", cex.symbols = 1.5, pch = 20, main = "3D Scatterplot", color = "orange")
# Chunk 11
boxplot(salary_m ~ position_fac, xlab = "Position", ylab = "Salary(in millions)")
# disable the formatting of numbers.
knitr::knit_hooks$set(inline = as.character)
#load data file
load("data/nba2017-salary-points.RData")
#list the available objects
ls()
#measure salary in millions
salary_m <- round(salary/1000000, digits = 2)
paste("$", format(salary_m))
#creating experience as an integer vector
experience_int <- as.integer(replace(experience,grep("R",experience),"0"))
#creating position factor
position_fac <- factor(position)
levels(position_fac) <- list("center" = "C", "small_fwd" = "SF", "power_fwd" = "PF", "shoot_guard" = "SG", "point_guard" = "PG")
#frequencies for positions
table(position_fac)
#load data file
load("data/nba2017-salary-points.RData")
#list the available objects
ls()
#measure salary in millions
salary_m <- round(salary/1000000, digits = 2)
paste("$", format(salary_m))
#creating experience as an integer vector
experience_int <- as.integer(replace(experience,grep("R",experience),"0"))
#creating position factor
position_fac <- factor(position)
levels(position_fac) <- list("center" = "C", "small_fwd" = "SF", "power_fwd" = "PF", "shoot_guard" = "SG", "point_guard" = "PG")
#frequencies for positions
table(position_fac)
c(1,2,3,4,5) *2
c(1,4,9,16,25) ^ (1/2)
1:3^2
(1:5) * 2
var <- 3
Var*2
x <- 2
2x <- 2*x
slice(
arrange(
summarise(
group_by(dat,team),
average_points3 = mean(points3)),
average_points3
),1:5)
# Chunk 1
# don't forget to load the packages
library(dplyr)
library(ggplot2)
# Chunk 3
# download RData file into your working directory
github <- "https://github.com/ucb-stat133/stat133-fall-2017/raw/master/"
csv <- "data/nba2017-players.csv"
download.file(url = paste0(github, csv), destfile = 'nba2017-players.csv')
# Chunk 4: read
# with "base" read.csv()
dat <- read.csv('nba2017-players.csv', stringsAsFactors = FALSE)
# with "readr" read_csv()
#dat <- read_csv('nba2017-players.csv')
# Chunk 5
# first three rows
three_rows <- slice(dat, 1:3)
three_rows
# Chunk 6
# subset rows given a condition
# (height greater than 85 inches)
gt_85 <- filter(dat, height > 85)
gt_85
# Chunk 7
# columns by name
player_height <- select(dat, player, height)
# Chunk 8
five_rows <- slice(dat, 1:5)
# Chunk 9
every_five_rows <- slice(dat,c(10,15,20,25,30,35,40,45,50))
# Chunk 10
last_five_rows <- slice(dat, 46:50)
# Chunk 11
lt_70 <- filter(dat, height < 70)
# Chunk 12
GSW <- filter(dat, team == "GSW")
# Chunk 13
GSW_C <- filter(GSW, position == "C")
# Chunk 14
LAL <- filter(dat, team == "LAL")
select(LAL, player)
# Chunk 15
GSW_PG <- filter(GSW, position == "PG")
select(GSW_PG, player, salary)
# Chunk 16
experienced <- filter(dat, experience > 10, salary <10000000)
select(experienced, player,age,team)
# Chunk 17
rookie_20 <- filter(dat, experience == 0, age == 20)
slice(select(rookie_20, player,team,height,weight),1:5)
# Chunk 18
# creating a small data frame step by step
gsw <- filter(dat, team == 'GSW')
gsw <- select(gsw, player, height, weight)
gsw <- slice(gsw, c(4, 8, 10, 14, 15))
gsw
# Chunk 19
mutate(gsw, height / weight)
# Chunk 20
mutate(gsw, ht_wt = height / weight)
# Chunk 21
gsw2 <- mutate(gsw, ht_m = height * 0.0254, wt_kg = weight * 0.4536)
gsw2
# Chunk 22
# order rows by height (increasingly)
arrange(gsw, height)
# Chunk 23
# order rows by height (decreasingly)
arrange(gsw, desc(height))
# Chunk 24
# order rows by height, and then weight
arrange(gsw, height, weight)
# Chunk 25
mutate(gsw, poduct = height * weight)
# Chunk 26
gsw3 <- mutate(gsw, log_height = log(height), log_weight = log(weight))
gsw3
# Chunk 27
arrange(filter(dat, height <71), height)
# Chunk 28
select(slice(arrange(dat,desc(salary)), 1:5), player,team,salary)
# Chunk 29
select(slice(arrange(dat,desc(points3)), 1:10), player,team,points3)
# Chunk 30
gsw_mpg <- mutate(GSW, min_per_game = minutes/games)
arrange(gsw_mpg, desc(min_per_game))
# Chunk 31
# average salary of NBA players
summarise(dat, avg_salary = mean(salary))
# Chunk 32
mean(dat$salary)
# Chunk 33
# some stats for salary (dplyr)
summarise(
dat,
min = min(salary),
median = median(salary),
avg = mean(salary),
max = max(salary)
)
# Chunk 34
# some stats for salary (base R)
c(min = min(dat$salary),
median = median(dat$salary),
median = mean(dat$salary),
max = max(dat$salary))
# Chunk 35
# average salary, grouped by team
summarise(
group_by(dat, team),
avg_salary = mean(salary)
)
# Chunk 36
# average salary, grouped by position
summarise(
group_by(dat, position),
avg_salary = mean(salary)
)
# Chunk 37
arrange(
summarise(
group_by(dat, position),
avg_height = mean(height),
avg_weight = mean(weight)),
desc(avg_height)
)
# Chunk 38
summarise(dat, max = max(salary))
# Chunk 39
summarise(dat, std_points3 = sd(points3))
# Chunk 40
summarise(
group_by(dat, team),
median = median(points3)
)
# Chunk 41
slice(
arrange(
summarise(
group_by(dat,team),
average_points3 = mean(points3)),
average_points3
),1:5)
# Chunk 42
PF_10and15 <- filter(dat, position == "PF", experience == 5 |experience == 10)
summarise(PF_10and15,
mean_age = mean(age),
sd_age = sd(age))
# Chunk 43
# scatterplot (option 1)
ggplot(data = dat) +
geom_point(aes(x = points, y = salary))
# Chunk 45
# colored scatterplot
ggplot(data = dat, aes(x = points, y = salary)) +
geom_point(aes(color = position))
# Chunk 46
# sized and colored scatterplot
ggplot(data = dat, aes(x = points, y = salary)) +
geom_point(aes(color = position, size = points3))
# Chunk 47
# sized and colored scatterplot
ggplot(data = dat, aes(x = points, y = salary)) +
geom_point(aes(color = position, size = points3), alpha = 0.7)
# Chunk 48
ggplot(data = gsw, aes(x = height, y = weight)) + geom_point()
# Chunk 49
ggplot(data = gsw, aes(x = height, y = weight)) + geom_point() + geom_text(aes(label = player))
# Chunk 50
ggplot(data = GSW, aes(x = height, y = weight)) + geom_point() + geom_label(aes(label = player))
# Chunk 51
ggplot(data = dat) + geom_density(aes(salary))
# Chunk 52
ggplot(data = dat) + geom_histogram(aes(points2),binwidth = 50)
# Chunk 53
ggplot(data = dat) + geom_bar(aes(position))
# Chunk 54
dat_c <- filter(dat, position == "C")
ggplot(data = dat_c, aes(x = experience, y = salary)) + geom_point() + geom_smooth(method = lm)
# Chunk 55
ggplot(data = dat_c, aes(x = experience, y = salary)) + geom_point() + geom_smooth(method = loess)
# Chunk 56
# scatterplot by position
ggplot(data = dat, aes(x = points, y = salary)) +
geom_point() +
facet_wrap(~ position)
# Chunk 57
# scatterplot by position
ggplot(data = dat, aes(x = points, y = salary)) +
geom_point(aes(color = position), alpha = 0.7) +
facet_grid(~ position) +
geom_smooth(method = loess)
# scatterplot by position
ggplot(data = dat, aes(x = points, y = salary)) +
geom_point(aes(color = position), alpha = 0.7) +
facet_grid(position ~ .) +
geom_smooth(method = loess)
# Chunk 58
ggplot(data = dat, aes(x = experience, y = salary)) +
geom_point() +
facet_wrap(~ position)
# Chunk 59
ggplot(data = dat, aes(x = experience, y = salary)) +
geom_point() +
facet_wrap(~ team)
# Chunk 60
ggplot(data = dat, aes(age)) +
geom_density() +
facet_wrap(~ team)
# Chunk 61
ggplot(data = dat, aes(x = height, y = weight)) +
geom_point() +
facet_wrap(~ position)
# Chunk 62
ggplot(data = dat, aes(x = height, y = weight)) +
geom_density2d() +
facet_wrap(~ position)
slice(
arrange(
summarise(
group_by(dat,team),
average_points3 = mean(points3)),
average_points3
),1:5)
dat %>%
filter(experience == 0, age == 20)%>%
select(player, team, height, weight) %>%
slice(1:5)
# packages
library(readr)        # importing data
library(dplyr)        # data wrangling
library(ggplot2)      # graphics
# importing data
read_csv("./data/nba2017-players.csv")
#creating warriors data frame
warriors <- filter(dat, team == "GSW")
warriors <- arrange(warriors, salary)
# save warriors data frame
write.csv(warriors, file = "./data/warriors.csv", row.names = FALSE)
#creating lakers data frame
lakers <- filter(dat, team == "LAL")
lakers <- arrange(lakers, desc(experience))
#save lakers data frame
write.csv(lakers, file = "./data/lakers.csv", row.names = FALSE)
#exporting the summary statistics of height and weight
summary(dat[ ,c('height','weight')])
# divert output to the specified file
sink(file = './output/summary-height-weight.txt')
summary(dat[ ,c('height', 'weight')])
sink()
#export the output str() on the data frame
sink(file = './output/data-structure.txt')
str(dat)
sink()
#export summary() of warriors
sink(file = './output/summary-warriors.txt')
summary(warriors)
sink()
#export summary() of lakers
sink(file = './output/summary-lakers.txt')
summary(lakers)
sink()
# saving a scatterplot in png format
png(filename = "./images/scatterplot-height-weight.png")
plot(dat$height, dat$weight, pch = 20,
xlab = 'Height', ylab = 'Height')
dev.off()
#an image with higher resolution
png(filename = "./images/scatterplot-height-weight-hd.png",res = 200)
plot(dat$height, dat$weight, pch = 20,
xlab = 'Height', ylab = 'Height')
dev.off()
#saving a histogram in JPEG format
jpeg(filename ="./images/histogram-age.jpeg", width = 600, height = 400)
hist(dat$age, xlab = "age")
dev.off()
# saving a pdf of the histogram
pdf(file =  "./images/histogram-age.pdf", width = 7, height = 5)
hist(dat$age, xlab = "age")
dev.off()
# scatterplot of points and salary using ggplot()
ggsave("./images/points_salary.pdf", width = 7, height = 5 )
ggplot(dat, aes(x = points, y = salary)) + geom_point()
#scatterplot of height and weight,faceting by position
ggsave("./images/heigh_weight_by_position.pdf", width = 6, height = 4)
gg_ht_wt_positions <- ggplot(dat, aes(x= height, y = salary)) + geom_point()
gg_ht_wt_positions + facet_grid(position ~.)
# display player names of lakers
dat %>%
filter(team == "LAL") %>%
select(player)
#display the name and salary of GSW PGs
GSW %>%
filter(position == "PG") %>%
select(player, salary)
#dislay the name, age, and team, of players with more than 10 years of experience,
# making 10 million dollars or less.
dat %>%
filter(experience > 10, salary <= 10000000) %>%
select(player, age, team)
#select the name, team, height, and weight, of rookie players,
# 20 years old, displaying only the first five occurrences (i.e. rows)
dat %>%
filter(experience == 0, age == 20)%>%
select(player, team, height, weight) %>%
slice(1:5)
GSW %>%
mutate(min_per_game = GSW$minutes/GSW$games)
GSW %>%
mutate(min_per_game = GSW$minutes/GSW$games) %>%
select(player, experience,min_per_game)
gsw_mpg <- GSW %>%
mutate(min_per_game = GSW$minutes/GSW$games) %>%
select(player, experience,min_per_game)
gsw_mpg <- GSW %>%
mutate(min_per_game = GSW$minutes/GSW$games) %>%
select(player, experience,min_per_game) %>%
arrange(desc(min_per_game))
gsw_mpg
# Chunk 1
# download RData file into your working directory
github <- "https://github.com/ucb-stat133/stat133-fall-2017/raw/master/"
csv <- "data/nba2017-players.csv"
download.file(url = paste0(github, csv), destfile = 'nba2017-players.csv')
# Chunk 2: read
# with "base" read.csv()
dat <- read.csv('nba2017-players.csv', stringsAsFactors = FALSE)
library(dplyr)
# Chunk 3
mkdir lab06
# Chunk 4
cd lab06
# Chunk 5
mkdir data code output images
# Chunk 6
ls
# Chunk 7
touch README.md
# Chunk 8
cd data
# Chunk 9
#curl -O https://github.com/ucb-stat133/stat133-fall-2017/raw/master/data/nba2017-players.csv
# Chunk 10
wc nba2017-players.csv
# Chunk 11
head nba2017-players.csv
# Chunk 12
tail -n 5 nba2017-players.csv
# Chunk 13
# packages
library(readr)    # importing data
library(dplyr)    # data wrangling
library(ggplot2)  # graphics
# Chunk 14
summary(dat[ ,c('height', 'weight')])
# Chunk 15
# manipulation step-by-step
dat1 <- group_by(dat, team)
dat2 <- select(dat1, team, height, weight)
dat3 <- summarise(dat2,
avg_height = mean(height, na.rm = TRUE),
avg_weight = mean(weight, na.rm = TRUE))
dat4 <- arrange(dat3, avg_height)
dat4
# Chunk 16
# inside-out style (hard to read)
arrange(
summarise(
select(
group_by(dat, team),
team, height, weight
),
avg_height = mean(height, na.rm = TRUE),
avg_weight = mean(weight, na.rm = TRUE)
),
avg_height
)
# Chunk 17
# using %>%
dat %>%
group_by(team) %>%
select(team, height, weight) %>%
summarise(
avg_height = mean(height, na.rm = TRUE),
avg_weight = mean(weight, na.rm = TRUE)) %>%
arrange(avg_height)
dat %>%
summarise(group_by(team),avg_salary = mean(salary))%>%
arrange(avg_salary)%>%
slice(46:50)
dat %>%
select(position == "PF", experience = 5 | experience = 10) %>%
summarise(avg_age = mean(age), sd_age = sd(age))
dat %>%
summarise(group_by(team),avg_salary = mean(dat$salary))%>%
arrange(avg_salary)%>%
slice(46:50)
getwd()
setwd("~/Desktop/stat133/stat133-hws-fall17/hw03")
download.file("https://raw.githubusercontent.com/ucb-stat133/stat133-fall-2017/master/data/nba2017-roster.csv", destfile = ("data/nba2017-roster.csv")
)
download.file("https://raw.githubusercontent.com/ucb-stat133/stat133-fall-2017/master/data/nba2017-stats.csv", destfile = ("data/nba2017-stats.csv"))
#creating a data frame
df <- data.frame(
name = c("adam", "ben", "caroline"),
gender = c("m","m","f"),
age = c(18,20,16)
)
80 + 20 + 527 + 10 + 1500 + 83
expenses <- c(phone, transportation, groceries, gym, rent, other)
names(expenses) <- c('phone', 'transportation', 'groceries', 'gym', 'rent', 'other')
expenses <- c(phone, transportation, groceries, gym, rent, other)
names(expenses) <- c('phone', 'transportation', 'groceries', 'gym', 'rent', 'other')
source('~/Desktop/stat133/LAB/lab1/lab01-fall17-R-basics-solutions.R')
phone <- 80
# Make more assignments to create variables `transportation`, `groceries`, `gym`,
# `rent`, and `other` with their corresponding amounts:
transportation <- 20
groceries <- 527
gym <- 10
rent <- 1500
other <- 83
# create a `total` object with the sum of the expenses:
total <- phone + transportation + groceries + gym + rent + other
total
# semester expenses (assume the semester involves five months)
total * 5
# year expenses (10 months)
total * 10
# your vector expenses (with named elements)
expenses <- c(phone, transportation, groceries, gym, rent, other)
names(expenses) <- c('phone', 'transportation', 'groceries', 'gym', 'rent', 'other')
expenses
barplot(expenses)
barplot(sort(expenses, decreasing = TRUE))
